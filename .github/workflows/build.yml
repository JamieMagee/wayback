name: build

on:
  push:
    branches:
      - main
      - 'renovate/**'

  pull_request:

env:
  VERSION: v0
  NODE_VERSION: 16
  YARN_CACHE_KEY: v0
  YARN_CACHE_FOLDER: .cache/yarn
  # https://github.com/chalk/supports-color/issues/106
  FORCE_COLOR: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      # Clear caches on cache miss, otherwise they will grow indefinitely
      - name: Clear yarn cache
        if: steps.yarn_cache_packages.outputs.cache-hit != 'true' && github.ref == 'refs/heads/main'
        run: yarn cache clean

      - run: yarn install --frozen-lockfile

  test:
    needs: prepare
    runs-on: ubuntu-latest

    # tests shouldn't need more than 15 min
    timeout-minutes: 15

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3.4.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'jamie.magee@gmail.com'
          git config --global user.name  'Jamie Magee'
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - run: yarn lint

      - run: yarn compile

      - run: yarn jest --maxWorkers=2 --ci --coverage

      - name: Upload coverage
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        if: always()
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # tag=v3.1.0

  release:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3.4.1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Init platform
        id: init
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'jamie.magee@gmail.com'
          git config --global user.name  'Jamie Magee'
          yarn config set version-git-tag false

      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3.0.2
        with:
          fetch-depth: 0
          ref: 'release'

      - name: fetch pr
        if: ${{github.event_name == 'pull_request'}}
        run: |
          git fetch origin ${{ github.ref }}

      - name: Merge
        id: merge
        run: |
          git merge --allow-unrelated-histories --no-ff -m 'skip: merge (${{ github.sha }}) [skip release]' ${{ github.sha }}
          commit=$(git rev-parse HEAD)
          echo "::set-output name=commit::${commit}"

      - name: Cache Yarn packages
        id: yarn_cache_packages
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ env.YARN_CACHE_KEY }}-${{ runner.os }}-yarn_cache-

      - name: Cache node_modules
        uses: actions/cache@0865c47f36e68161719c5b124609996bb5c40129 # tag=v3.0.5
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.NODE_VERSION }}-yarn-

      - run: yarn install --frozen-lockfile

      - name: Push release branch
        run: git push origin release:release
        if: ${{github.ref == 'refs/heads/main'}}

      - name: Release
        run: |
          # override for semantic-release
          export GITHUB_REF=refs/heads/release GITHUB_SHA=${{ steps.merge.outputs.commit }}
          yarn release
        if: ${{github.ref == 'refs/heads/main'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
